% ==============================================================================
% Project:  Acoustic measurement
% ------------------------------------------------------------------------------
% Script:   film_bending_fatigue_test
% Author:   Woongji Kim (wj.kim@postech.ac.kr)
% Date:     2024-10-10
% ------------------------------------------------------------------------------
% Introduction
%   - This script is used to test the film bending fatigue test.
% ------------------------------------------------------------------------------
%   - instList: instrument list
%   - Profile:  experiment profile
% ------------------------------------------------------------------------------
%   - instESP300:   instrument information of ESP300
%   - gpibESP300:   GPIB object of ESP300
% ==============================================================================

clear Study

% Script
Study.Script.filename = mfilename;

% Profile
Study.Profile.filename = ...
    "profile_film_bending_fatigue_test.json";

% Linear coordinate
Study.Linear.start  = 0;
Study.Linear.end    = 0.0057;
Study.count         = 100;

% Environment settings
Env.Fig.Font.serif  = 'Times New Roman';
Env.Fig.Font.sanss  = 'Arial';
Env.Fig.Font.monos  = 'Consolas';
Env.Fig.Font.size   = 120;
% Env.Fig.color       = tab10;
Env.Fig.lineStyle   = ["-" "-." ":" "--"];
Env.Fig.marker      = ["o" "^" "square"];

%% # 1. Load the study profile
Profile = importJSON(Study.Profile.filename);
disp("<Profile>: Experiment profile loaded")

%% # 2. Initialize the instruments
[instESP300, gpibESP300] = initializeESP300(instList, gpibESP300, ...
    configMotorizedActuator);
%% # 3. Set up the instruments by study profile
setProfile(Profile, ...
    commandStageController300, ...
    gpibESP300)

%% # 4. Run measurement
hWaitbar = waitbar(0, "Initializing...", ...
    "Name", "Film bending fatigue test", ...
    "CreateCancelBtn", 'setappdata(gcbf,''canceling'',1)');
% set(hWaitbar, 'Units', 'Pixels', ...
%     'Position', [0 0 200 200]);
% set(gca, 'FontSize', Env.Fig.Font.size)
setappdata(hWaitbar, 'canceling', 0);
totalIter = Study.count;
iter = 1;
tic

for x = 1:Study.count    
    if getappdata(hWaitbar,'canceling')
        break
    end

    commandESP300(gpibESP300, commandStageController300, ...
        "motion_position_control", ...
        "move_absolute", ...
        configMotorizedActuator(1).spec.axis, ...
        Study.Linear.start*1e3 ...
        )
    commandESP300(gpibESP300, commandStageController300, ...
        "motion_position_control", ...
        "move_absolute", ...
        configMotorizedActuator(2).spec.axis, ...
        Study.Linear.start*1e3 ...
        )
    waitReadyESP300(gpibESP300);
    pause(0.2);   % define pause time

    commandESP300(gpibESP300, commandStageController300, ...
        "motion_position_control", ...
        "move_absolute", ...
        configMotorizedActuator(1).spec.axis, ...
        Study.Linear.end*1e3 ...
        )
    commandESP300(gpibESP300, commandStageController300, ...
        "motion_position_control", ...
        "move_absolute", ...
        configMotorizedActuator(2).spec.axis, ...
        Study.Linear.end*1e3 ...
        )
    waitReadyESP300(gpibESP300);
    pause(0.2);   % define pause time

    waitbar(iter/totalIter, hWaitbar, ...
        sprintf("Counter: %d/%d", iter, totalIter));
    iter = iter + 1;
end

commandESP300(gpibESP300, commandStageController300, ...
    "motion_position_control", ...
    "move_absolute", ...
    configMotorizedActuator(1).spec.axis, ...
    Study.Linear.start*1e3 ...
    )
commandESP300(gpibESP300, commandStageController300, ...
    "motion_position_control", ...
    "move_absolute", ...
    configMotorizedActuator(2).spec.axis, ...
    Study.Linear.start*1e3 ...
    )
waitReadyESP300(gpibESP300);
pause(0.5);   % define pause time

delete(hWaitbar);

clear x hWaitbar totalIter iter